pub mod exe;
pub use exe::run;
use phf::phf_map;

pub fn decode(input: &str) -> Option<String> {
    let mut buf = String::new();
    let mut new_word = false;
    for letter in input.split(' ') {
        if letter.is_empty() {
            if !new_word {
                buf.push(' ');
                new_word = true;
            }
        } else {
            buf.push(*MORSE_DEC.get(letter)?);
            new_word = false;
        }
    }
    Some(buf)
}
pub fn encode(input: &str) -> Option<String> {
    let mut buf = String::new();
    for letter in input.chars() {
        if letter.is_whitespace() {
            buf.push_str("  ");
        } else {
            buf.push_str(*MORSE_ENC.get(&letter)?);
            buf.push(' ');
        }
    }
    Some(buf)
}
static MORSE_DEC: phf::Map<&'static str, char> = phf_map! {
    ".-" => 'a',
    "-..." => 'b',
    "-.-." => 'c',
    "-.." => 'd',
    "." => 'e',
    "..-." => 'f',
    "--." => 'g',
    "...." => 'h',
    ".." => 'i',
    ".---" => 'j',
    "-.-" => 'k',
    ".-.." => 'l',
    "--" => 'm',
    "-." => 'n',
    "---" => 'o',
    ".--." => 'p',
    "--.-" => 'q',
    ".-." => 'r',
    "..." => 's',
    "-" => 't',
    "..-" => 'u',
    "...-" => 'v',
    ".--" => 'w',
    "-..-" => 'x',
    "-.--" => 'y',
    "--.." => 'z',
    ".----" => '1',
    "..---" => '2',
    "...--" => '3',
    "....-" => '4',
    "....." => '5',
    "-...." => '6',
    "--..." => '7',
    "---.." => '8',
    "----." => '9',
    "-----" => '0',
    "..--.." => '?',
    "-.-.--" => '!',
    ".-.-.-" => '.',
    "--..--" => ',',
    "-.-.-." => ';',
    "---..." => ':',
    ".-.-." => '+',
    "-....-" => '-',
    "-..-." => '/',
    "-...-" => '=',
};

static MORSE_ENC: phf::Map<char, &'static str> = phf_map! {
    'a' => ".-",
    'b' => "-...",
    'c' => "-.-.",
    'd' => "-..",
    'e' => ".",
    'f' => "..-.",
    'g' => "--.",
    'h' => "....",
    'i' => "..",
    'j' => ".---",
    'k' => "-.-",
    'l' => ".-..",
    'm' => "--",
    'n' => "-.",
    'o' => "---",
    'p' => ".--.",
    'q' => "--.-",
    'r' => ".-.",
    's' => "...",
    't' => "-",
    'u' => "..-",
    'v' => "...-",
    'w' => ".--",
    'x' => "-..-",
    'y' => "-.--",
    'z' => "--..",
    '1' => ".----",
    '2' => "..---",
    '3' => "...--",
    '4' => "....-",
    '5' => ".....",
    '6' => "-....",
    '7' => "--...",
    '8' => "---..",
    '9' => "----.",
    '0' => "-----",
    '?' => "..--..",
    '!' => "-.-.--",
    '.' => ".-.-.-",
    ',' => "--..--",
    ';' => "-.-.-.",
    ':' => "---...",
    '+' => ".-.-.",
    '-' => "-....-",
    '/' => "-..-.",
    '=' => "-...-",
};
